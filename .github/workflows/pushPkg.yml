# This is a basic workflow that is manually triggered

name: Create Nuget Packages

on:
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        dotnet-version: ['5.0.x' ]

    runs-on: windows-latest

    env:
      Solution_Name: slStreamUtils.sln
      Test_Project_Path: UnitTests\slStreamUtilsTest\slStreamUtilsTest.csproj
      MainPackage_Path: slStreamUtils\slStreamUtils.csproj
      ProtobufPackage_Path: slStreamUtilsProtobuf\slStreamUtilsProtobuf.csproj
      MessagePackPackage_Path: slStreamUtilsMessagePack\slStreamUtilsMessagePack.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
        
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}    

    - name: Execute unit tests
      run: dotnet test

    - name: Build 
      run: msbuild $env:MainPackage_Path /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: MainPackage Publish NuGet
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: $env:MainPackage_Path
        
        # NuGet package id, used for version detection & defaults to project name
        # PACKAGE_NAME: Core

        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: Directory.Build.props

        # Regex pattern to extract version info in a capturing group
        # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        # VERSION_STATIC: 1.0.0

        # Flag to toggle git tagging, enabled by default
        TAG_COMMIT: true

        # Format of the git tag, [*] gets replaced with actual version
        TAG_FORMAT: nuget_v*

        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        # NUGET_SOURCE: https://api.nuget.org

        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        # INCLUDE_SYMBOLS: false
